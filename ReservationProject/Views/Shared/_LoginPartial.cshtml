@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav d-flex justify-content-center">

    <li class="nav-item">
        <a class="nav-link text-light fs-5" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Contact Us</a>
    </li>

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light fs-5" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>
        <li class="nav-item">
            <form class="d-flex text-light justify-content-center fs-5" asp-area="Identity" asp-page="/Account/Logout" id="navLogoutButton" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light fs-5 text-center">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light fs-5" asp-area="Identity" id="navSignUp" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light fs-5" asp-area="Identity" id="navLoginButton" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
